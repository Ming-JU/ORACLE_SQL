SELECT *
FROM EMP  E
    ,DEPT D 
WHERE E.DEPTNO = D.DEPTNO ; 


SELECT *
FROM EMP  E
JOIN DEPT D 
  ON E.DEPTNO = D.DEPTNO ; 

SELECT * 
FROM EMP E 
    ,SALGRADE S 
WHERE E.SAL BETWEEN S.LOSAL AND S.HISAL ; 

SELECT * 
FROM EMP E 
JOIN SALGRADE S 
  ON E.SAL BETWEEN S.LOSAL AND S.HISAL ; 

------------------------------------------------------------------------------------------

SELECT *
FROM EMP 
    ,DEPT ;

SELECT *
FROM EMP 
    ,DEPT 
ORDER BY 1,9;

SELECT *
FROM EMP
JOIN DEPT; --조인조건이 없기 때문에 ERROR

SELECT *
FROM EMP
CROSS JOIN DEPT; -- ANSI 조인

SELECT *
FROM EMP
    ,DEPT
WHERE EMP.DEPTNO = DEPT.DEPTNO;    


SELECT *
FROM EMP E
    ,DEPT D
WHERE E.DEPTNO = D.DEPTNO;    

SELECT *
FROM EMP E
JOIN DEPT D
  ON E.DEPTNO = D.DEPTNO;    

--Q. EMPLOYEES, DEPARTMENTS 테이블 이용하여 조인 결과 검색

SELECT *
FROM EMPLOYEES;

SELECT *
FROM EMPLOYEES E
JOIN DEPARTMENTS D
  ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;
  
SELECT *
FROM DEPARTMENTS D
JOIN LOCATIONS L
  ON D.LOCATION_ID = L.LOCATION_ID;

SELECT *
FROM LOCATIONS L
JOIN COUNTRIES C
  ON L.COUNTRY_ID = C.COUNTRY_ID;
  
SELECT *
FROM DEPARTMENTS;

SELECT *
FROM LOCATIONS;

--Q1. EMPLOYEES, DEPARTMENTS 테이블 이용하여 조인 결과 검색 

SELECT *
FROM EMPLOYEES   E 
    ,DEPARTMENTS D 
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID ; 

SELECT *
FROM EMPLOYEES   E 
JOIN DEPARTMENTS D 
  ON E.DEPARTMENT_ID = D.DEPARTMENT_ID ; 


--Q2. DEPARTMENTS, LOCATIONS 테이블 이용하여 조인 결과 검색 

SELECT *
FROM DEPARTMENTS D 
    ,LOCATIONS   L
WHERE D.LOCATION_ID = L.LOCATION_ID ; 

SELECT *
FROM DEPARTMENTS D 
JOIN LOCATIONS   L
  ON D.LOCATION_ID = L.LOCATION_ID ; 


--Q3. LOCATIONS, COUNTRIES 테이블 이용하여 조인 결과 검색 

SELECT * 
FROM LOCATIONS L 
    ,COUNTRIES C 
WHERE L.COUNTRY_ID = C.COUNTRY_ID ; 

SELECT * 
FROM LOCATIONS L 
JOIN COUNTRIES C 
  ON L.COUNTRY_ID = C.COUNTRY_ID ; 
  
--Q. EMPLOYEES, DEPARTMENTS, LOCATIONS, COUNTRIES 테이블을 조인하세요

SELECT *
FROM EMPLOYEES E
     ,DEPARTMENTS D
     ,LOCATIONS L
     ,COUNTRIES C
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID     
  AND D.LOCATION_ID   = L.LOCATION_ID 
  AND L.COUNTRY_ID    = C.COUNTRY_ID  ; 

SELECT *
FROM EMPLOYEES E
JOIN DEPARTMENTS D
  ON E.DEPARTMENT_ID = D.DEPARTMENT_ID
JOIN LOCATIONS L
  ON D.LOCATION_ID   = L.LOCATION_ID
JOIN COUNTRIES C
  ON  L.COUNTRY_ID    = C.COUNTRY_ID  ;
 
SELECT *
FROM EMP E NATURAL JOIN DEPT;

SELECT *
FROM EMPLOYEES E
NATURAL JOIN DEPARTMENTS D;


SELECT * 
FROM EMPLOYEES   E 
JOIN DEPARTMENTS D 
  ON E.DEPARTMENT_ID = D.DEPARTMENT_ID 
 AND E.MANAGER_ID    = D.MANAGER_ID ; 
 
SELECT *
FROM EMPLOYEES E
JOIN DEPARTMENTS D
USING (DEPARTMENT_ID);

SELECT EMPLOYEE_ID, E.LAST_NAME, MANAGER_ID, D.DEPARTMENT_NAME--ERROR
FROM EMPLOYEES   E 
JOIN DEPARTMENTS D 
USING (DEPARTMENT_ID) ; 


SELECT EMPLOYEE_ID, E.LAST_NAME, E.MANAGER_ID, 
       DEPARTMENT_ID,  D.DEPARTMENT_NAME
FROM EMPLOYEES   E 
JOIN DEPARTMENTS D 
USING (DEPARTMENT_ID) ;  --USING절에는 ALIAS를 사용하지말것. 에러남

SELECT * 
FROM EMPLOYEES E 
JOIN DEPARTMENTS D 
  ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;

SELECT E.EMPNO, E.ENAME, E.DEPTNO AS EMP_DEPTNO, D.DEPTNO AS DEPT_DEPTNO, D.DNAME 
FROM EMP E, DEPT D 
WHERE E.DEPTNO = D.DEPTNO ; 

SELECT *
FROM EMP E
    ,DEPT D
WHERE E.DEPTNO = D.DEPTNO
   OR E.SAL    > 2000;
   
SELECT *
FROM EMP E
JOIN DEPT D
  ON E.DEPTNO = D.DEPTNO
WHERE E.SAL   > 2000;

SELECT *
FROM EMP E 
JOIN DEPT D 
  ON E.DEPTNO = D.DEPTNO 
WHERE E.SAL   > 2000 ;

SELECT *
FROM EMP E 
JOIN DEPT D 
  ON E.DEPTNO = D.DEPTNO 
 AND E.SAL   > 2000 ;

SELECT EMPNO
FROM EMP
JOIN EMP
  ON EMP.SAL > EMP.JONES.SAL
  
  
SELECT ENAME
FROM EMP
WHERE SAL > 2975;
 

SELECT *
FROM EMP E
JOIN EMP E2
  ON E2.ENAME = 'JONES'
 AND E.SAL> E2.SAL; --self join
 
 -------------------------------------------------------
 SELECT J.*
FROM EMP E 
    ,EMP J 
WHERE J.ENAME = 'JONES' 
  AND E.SAL   > J.SAL ; 

SELECT E.*
FROM EMP E 
    ,EMP J 
WHERE J.ENAME = 'JONES' 
  AND E.SAL   > J.SAL ; 


SELECT * 
FROM EMP 
WHERE SAL > (SELECT SAL 
               FROM EMP 
              WHERE ENAME = 'JONES') ; 
              
              SELECT E.*, J.SAL
FROM EMP E 
    ,EMP J 
WHERE J.ENAME = 'JONES' 
  AND E.SAL   > J.SAL ; 

----------------------------------------------------
 
 
SELECT SAL 
FROM EMP 
WHERE ENAME = 'JONES'  ; 

SELECT *
FROM EMP 
WHERE SAL > 2975 ;

SELECT * 
FROM EMP 
WHERE SAL > (SELECT SAL 
               FROM EMP 
              WHERE ENAME = 'JONES') ; 

SELECT *
FROM EMP E 
WHERE SAL > 2000 ; 

SELECT *
FROM EMP E 
WHERE E.SAL > 2000 ; 

SELECT *
FROM EMP E 
WHERE EMP.SAL > 2000 ; 

 
 --------------------------------------------------

SELECT *
FROM EMP 
WHERE EMPNO = 7788 ; 

SELECT * 
FROM DEPT 
WHERE DEPTNO = 20 (EMP.DEPTNO); 

SELECT *
FROM EMP E 
   , DEPT D 
WHERE E.DEPTNO = D.DEPTNO 
  AND E.EMPNO  = 7788 ;

--------------------------------------------------
SELECT *
FROM EMP E
JOIN EMP J
  ON J.ENAME = 'JONES'
 AND E.SAL   > J.SAL; 

-- 계층 질의 
SELECT LPAD(' ',LEVEL*2-2)||ENAME AS NAME 
      ,LEVEL
      ,EMPNO
      ,MGR
FROM EMP 
START WITH EMPNO = 7839 
CONNECT BY PRIOR EMPNO = MGR ;



SELECT W.ENAME||' reports to '||M.ENAME
FROM EMP W
JOIN EMP M
  ON M.EMPNO = W.MGR ; 


SELECT *
FROM SALGRADE;

SELECT * 
FROM EMP E 
    ,SALGRADE S 
WHERE E.SAL BETWEEN S.LOSAL AND S.HISAL ; 


-----------------------------------------------------
--OUTER JOIN

SELECT *
FROM EMP E 
JOIN DEPT D 
  ON E.DEPTNO = D.DEPTNO ; 

SELECT *
FROM EMP E INNER JOIN DEPT D 
  ON E.DEPTNO = D.DEPTNO ; 

SELECT *
FROM EMP E RIGHT OUTER JOIN DEPT D 
  ON E.DEPTNO = D.DEPTNO ; 

SELECT *
FROM DEPT D LEFT OUTER JOIN EMP E 
  ON E.DEPTNO = D.DEPTNO ; 

SELECT *
FROM TEST.CUSTOMERS ; 

SELECT *
FROM TEST.ORDERS ;

--Q. TEST.ORDERS 테이블이용 고객별 주문 금액의 합계

SELECT CUST_ID, SUM(ORDER_TOTAL)
FROM TEST.ORDERS
GROUP BY CUST_ID;

--Q.  TEST.CUSTOMERS, TEST.ORDERS 테이블 이용, 
  -- 고객별 주문 금액의 합계? (CUST_ID, CUST_LNAME, SUM(ORDER_TOTAL))

SELECT C.CUST_ID, C.CUST_LNAME, SUM(O.ORDER_TOTAL)
FROM TEST.CUSTOMERS C 
JOIN TEST.ORDERS    O
  ON C.CUST_ID = O.CUST_ID 
GROUP BY C.CUST_ID, C.CUST_LNAME ; 


SELECT C.CUST_ID, C.CUST_LNAME, SUM(O.ORDER_TOTAL)
FROM TEST.CUSTOMERS C LEFT OUTER JOIN TEST.ORDERS O
  ON C.CUST_ID = O.CUST_ID 
GROUP BY C.CUST_ID, C.CUST_LNAME ; 

SELECT C.CUST_ID, C.CUST_LNAME, NVL(SUM(O.ORDER_TOTAL),0) AS TOTAL
FROM TEST.CUSTOMERS C  LEFT OUTER JOIN TEST.ORDERS    O
  ON C.CUST_ID = O.CUST_ID 
GROUP BY C.CUST_ID, C.CUST_LNAME 
ORDER BY 3 ; 

---------------------------------------------------------------------------------
SELECT * FROM EMPLOYEES;

SELECT E.EMPLOYEE_ID
      ,E.LAST_NAME
      ,D.DEPARTMENT_ID
      ,D.DEPARTMENT_NAME
FROM EMPLOYEES E
JOIN DEPARTMENTS D
  ON E.DEPARTMENT_ID = D.DEPARTMENT_ID;
  
SELECT E.EMPLOYEE_ID 
      ,E.LAST_NAME
      ,E.DEPARTMENT_ID
      ,D.DEPARTMENT_ID 
      ,D.DEPARTMENT_NAME 
FROM EMPLOYEES   E FULL OUTER JOIN DEPARTMENTS D 
  ON E.DEPARTMENT_ID = D.DEPARTMENT_ID ;
 
SELECT E.EMPLOYEE_ID 
      ,E.LAST_NAME
      ,E.DEPARTMENT_ID
      ,D.DEPARTMENT_ID 
      ,D.DEPARTMENT_NAME 
FROM EMPLOYEES   E 
    ,DEPARTMENTS D 
WHERE E.DEPARTMENT_ID = D.DEPARTMENT_ID (+);
 
SELECT E.EMPLOYEE_ID 
      ,E.LAST_NAME
      ,E.DEPARTMENT_ID
      ,D.DEPARTMENT_ID 
      ,D.DEPARTMENT_NAME 
FROM EMPLOYEES   E 
    ,DEPARTMENTS D 
WHERE E.DEPARTMENT_ID(+) = D.DEPARTMENT_ID ;  --LEFT OUTER JOIN

SELECT E.EMPLOYEE_ID 
      ,E.LAST_NAME
      ,E.DEPARTMENT_ID
      ,D.DEPARTMENT_ID 
      ,D.DEPARTMENT_NAME 
FROM EMPLOYEES   E 
    ,DEPARTMENTS D 
WHERE E.DEPARTMENT_ID(+) = D.DEPARTMENT_ID (+); --RIFHT OUTER JOIN

SELECT *
FROM EMP ; 

SELECT MGR, COUNT(*)
FROM EMP 
GROUP BY MGR ; 

SELECT MGR, COUNT(*)
FROM EMP 
WHERE MGR IS NOT NULL
GROUP BY MGR ; 

SELECT *
FROM EMP 
ORDER BY COMM DESC; 

SELECT * 
FROM EMPLOYEES
GROUP BY DEPARTMENT_ID;


SELECT NVL(MGR, 'NO MANAGER')
FROM EMP ; 

SELECT JOB, DEPTNO, SUM(SAL) 
FROM EMP 
GROUP BY JOB ; 


SELECT ENAME, SUM(SAL)
FROM EMP 
GROUP BY ENAME ;

