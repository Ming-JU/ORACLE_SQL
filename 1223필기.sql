--20201223

INSERT INTO EMP2 ...
SELECT ...
UPDATE EMP2 ....
SELECT ...
DELETE EMP2 .... 
SELECT ...

COMMIT; OR ROLLBACK ; 

INSERT INTO EMP2 ... 
COMMIT ; 

# NEW SESSION 

SELECT * FROM EMP2 ; 

-- COMMIT ;
CREATE TABLE ....
-- COMMIT ;

-- COMMIT ;
ALTER TABLE ... 
-- COMMIT ;

-- COMMIT ;
TRUNCATE TABLE ....
-- COMMIT ;

-- TX OPEN 
INSERT 
UPDATE 
COMMIT ; OR ROLLBACK ; 
-- TX CLOSE 

--------------------------------------------------------------
--A
INSERT INTO EMP2 
   SELECT * FROM EMP ; 
COMMIT ; 

SELECT EMPNO,SAL,DEPTNO FROM EMP2 ;

UPDATE EMP2 
SET SAL = 4000 
WHERE EMPNO = 7788 ;

SELECT EMPNO, SAL, DEPTNO 
FROM EMP2 
WHERE EMPNO = 7788 ; 

COMMIT ;

UPDATE EMP2 
SET SAL = SAL * 1.1 
WHERE DEPTNO = 10 ;

SELECT EMPNO, SAL, DEPTNO 
FROM EMP2 
WHERE DEPTNO = 10 ;

COMMIT;


SELECT EMPNO, SAL, DEPTNO 
FROM EMP2 
WHERE DEPTNO = 10 ;


SELECT * FROM EMP;

SELECT * FROM DEPT;

-----------------------------------
/*
CREATE TABLE WHERE 
(ID  NUMBER) ; 

SELECT * FROM WHERE ;

DDL 
CREATE   : 생성
DROP     : 삭제 
ALTER    : 수정 
TRUNCATE : 테이블 데이터를 절삭(삭제)
* AUTO COMMIT !!  :주의가필요함 

CREATE TABLE EMP
(EMPNO   NUMBER

CREATE VIEW EMPV

CREATE INDEX EMP_IX 

CREATE SEQUENCE 

CREATE SYNONYM 



*/

SELECT * FROM SESSION_PRIVS ;

SELECT * 
FROM SESSION_PRIVS 
WHERE PRIVILEGE = 'CREATE USER';

INSERT INTO EMP (EMPNO, ENAME, SAL, DEPTNO) 
VALUES (1234, 'RYU', 1000, 10) ;


CREATE TABLE T1 
(C1    CHAR(5),      -- 고정길이 (~2000BYTE) 
 C2    VARCHAR2(5),  -- 가변길이 (~4000BYTE)
 C3    LONG,         -- 가변길이 (~2GB)
 C4    CLOB) ;       -- 가변길이 (~4GB) :저장공간을 따로둠

 
 DESC T1

INSERT INTO T1
VALUES ('ABC','ABC','ABC','ABC');

COMMIT;

SELECT * FROM T1;

SELECT * FROM T1 ; 
SELECT DUMP(C1) , DUMP(C2)
FROM T1 ; 




DROP TABLE T2 PURGE;
/*

1<=P<=38
-84<=S<=127


NUMBER(4,2)  =>     99.99     P>S
NUMBER(4,0)  =>   9999.       S=0
NUMBER(4,4)  =>      0.9999   P<=S
NUMBER(4,-1) =>  99990.       S<0  :적혀진값이 최댓값
*/

CREATE TABLE T2 
(C1    NUMBER, 
 C2    NUMBER(4,2), 
 C3    NUMBER(4,0), 
 C4    NUMBER(4,4), 
 C5    NUMBER(4,-1),
 C6    NUMBER(38,-84));

INSERT INTO T2 
VALUES (123456789.1234456789
       ,99.99, 9999, 0.9999, 99990, 9999999999990000000000000) ;
       
INSERT INTO T2 
VALUES (123456789.1234456789
       ,99.99, 9999, 0.9999, 99990,999999999999999999999999E84) ;

COMMIT ;
       
       
/*
DATE                    : YYYY/MM/DD HH:MI:SS
TIMESTAMP               : YYYY/MM/DD HH:MI:SS.123456789
TIMESTAMP WITH TIME ZONE: YYYY/MM/DD HH:MI:SS.123456789 +09:00
TIMESTAMP WITH LOCAL TIME ZONE: YYYY/MM/DD HH:MI:SS.123456789 --시차 자동계산



2020/12/23 14:37:56.123456789  -05:00

*/

CREATE TABLE T3 
(C1    DATE, 
 C2    TIMESTAMP, 
 C3    TIMESTAMP WITH TIME ZONE, 
 C4    TIMESTAMP WITH LOCAL TIME ZONE, 
 C5    INTERVAL YEAR TO MONTH, 
 C6    INTERVAL DAY TO SECOND) ; 
 
 /*
INTERVAL YEAR TO MONTH : 3-5 :3년 5개원
INTERVAL DAY TO SECOND : 5 15:00:11 :5일 15시간 ~~
SYSDATE 
CURRENT_DATE + (1*365) + 100 + 5/24 + 10/1440 + 5/86400
CURRENT_DATE + TO_YMINTERVAL('3-5') + TO_DSINTERVAL('100 5:10:5')


*/

INSERT INTO T3 
VALUES (CURRENT_TIMESTAMP
       ,CURRENT_TIMESTAMP
       ,CURRENT_TIMESTAMP
       ,CURRENT_TIMESTAMP
       ,'3-5', '5 5:15:10') ;

COMMIT ;

SELECT * FROM T3 ;

SELECT ROWID, E.*
FROM EMP E  
WHERE EMPNO = 7788 ;

SELECT * 
FROM EMP 
WHERE ROWID = 'AAASFqAAAAAABo3AAA' ; 

CREATE TABLE FRIENDS
(FNAME   VARCHAR2(10), 
 FPHONE  NUMBER(11),
 FHOME   VARCHAR2(10),
 FMAJOR  VARCHAR2(10));
 
INSERT INTO FRIENDS
VALUES( 'MINJU' , 01012341234 , 'SEOUL' , 'MATH');

SELECT * FROM FRIENDS;

---------------------------------------------------------

CREATE TABLE EMP3 
(EMPNO     NUMBER(4)     PRIMARY KEY, 
 ENAME     VARCHAR2(10)  NOT NULL,
 EMAIL     VARCHAR2(10)  UNIQUE ,
 SAL       NUMBER(7,2)   CHECK(SAL>0) , 
 DEPTNO    NUMBER(2)     REFERENCES DEPT(DEPTNO)) ; 


INSERT INTO EMP3   -- ERROR 
VALUES (NULL, 'RYU', 'ryu@', 1000, 10) ; 

INSERT INTO EMP3 
VALUES (1234, 'RYU', 'ryu@', 1000, 10) ; 

INSERT INTO EMP3  -- ERROR 
VALUES (1234, 'RYU', 'ryu@', 1000, 10) ; 

INSERT INTO EMP3  -- ERROR 
VALUES (4321, NULL, 'ryu@', 1000, 10) ; 

INSERT INTO EMP3 -- ERROR 
VALUES (4321, 'RCH', 'ryu@', 1000, 10) ; 

INSERT INTO EMP3 
VALUES (4321, 'RCH', 'ryu1@', 1000, 10) ; 

SELECT * FROM EMP3 ; 
ROLLBACK ; 
SELECT * FROM EMP3 ; 

CREATE TABLE EMP4 
(EMPNO     NUMBER(4)    CONSTRAINT EMP4_PK PRIMARY KEY, 
 ENAME     VARCHAR2(10) CONSTRAINT EMP4_NN NOT NULL,
 EMAIL     VARCHAR2(10) CONSTRAINT EMP4_UK UNIQUE ,
 SAL       NUMBER(7,2)  CONSTRAINT EMP4_CK CHECK(SAL>0) , 
 DEPTNO    NUMBER(2)    CONSTRAINT EMP4_FK REFERENCES DEPT(DEPTNO)) ; 

INSERT INTO EMP4
VALUES (1234, 'RYU', 'ryu@', -1000, 10) ; 

CREATE TABLE EMP5 
(EMPNO     NUMBER(4), 
 ENAME     VARCHAR2(10) CONSTRAINT EMP5_NN NOT NULL,
 EMAIL     VARCHAR2(10) CONSTRAINT EMP5_UK UNIQUE ,
 SAL       NUMBER(7,2)  CONSTRAINT EMP5_CK CHECK(SAL>0) , 
 DEPTNO    NUMBER(2)    CONSTRAINT EMP5_FK REFERENCES DEPT(DEPTNO),
 CONSTRAINT EMP5_PK PRIMARY KEY(EMPNO)) ; 
CREATE TABLE EMP6 
AS 
SELECT * FROM EMP ; 

SELECT * FROM EMP6 ;

CREATE TABLE EMP7 
AS 
SELECT EMPNO, ENAME, SAL, DEPTNO
FROM EMP 
WHERE DEPTNO= 30 ; 

SELECT * FROM EMP7 ;

CREATE TABLE EMP8 
AS 
SELECT EMPNO, ENAME, SAL*12, DEPTNO
FROM EMP 
WHERE DEPTNO= 30 ; 

CREATE TABLE EMP8 
AS 
SELECT EMPNO, ENAME, SAL*12 AS ANNSAL, DEPTNO
FROM EMP 
WHERE DEPTNO= 30 ; 


CREATE TABLE EMP8 (ID, NAME, ANNSAL, DEPTID)
AS 
SELECT EMPNO, ENAME, SAL*12, DEPTNO
FROM EMP 
WHERE DEPTNO= 30 ; 

SELECT * FROM EMP8 ;


SELECT SAL*12
FROM EMP ;

CREATE TABLE EMP9
AS 
SELECT EMPNO, ENAME, SAL*12 AS ANNSAL
FROM EMP ; 

SELECT SAL*12 
FROM EMP